(function(n,t){typeof define=="function"&&define.amd?define([],t):typeof module!="undefined"&&module.exports?module.exports=t():n.ReconnectingWebSocket=t()})(this,function(){function n(t,i,r){function o(n,t){var i=document.createEvent("CustomEvent");return i.initCustomEvent(n,!1,!1,t),i}var c={debug:!1,automaticOpen:!0,reconnectInterval:1e3,maxReconnectInterval:3e4,reconnectDecay:1.5,timeoutInterval:2e3,maxReconnectAttempts:null,binaryType:"blob"},s;r||(r={});for(s in c)this[s]=typeof r[s]!="undefined"?r[s]:c[s];this.url=t;this.reconnectAttempts=0;this.readyState=WebSocket.CONNECTING;this.protocol=null;var u=this,e,l=!1,h=!1,f=document.createElement("div");f.addEventListener("open",function(n){u.onopen(n)});f.addEventListener("close",function(n){u.onclose(n)});f.addEventListener("connecting",function(n){u.onconnecting(n)});f.addEventListener("message",function(n){u.onmessage(n)});f.addEventListener("error",function(n){u.onerror(n)});this.addEventListener=f.addEventListener.bind(f);this.removeEventListener=f.removeEventListener.bind(f);this.dispatchEvent=f.dispatchEvent.bind(f);this.open=function(t){if(e=new WebSocket(u.url,i||[]),e.binaryType=this.binaryType,t){if(this.maxReconnectAttempts&&this.reconnectAttempts>this.maxReconnectAttempts)return}else f.dispatchEvent(o("connecting")),this.reconnectAttempts=0;(u.debug||n.debugAll)&&console.debug("ReconnectingWebSocket","attempt-connect",u.url);var r=e,s=setTimeout(function(){(u.debug||n.debugAll)&&console.debug("ReconnectingWebSocket","connection-timeout",u.url);h=!0;r.close();h=!1},u.timeoutInterval);e.onopen=function(){clearTimeout(s);(u.debug||n.debugAll)&&console.debug("ReconnectingWebSocket","onopen",u.url);u.protocol=e.protocol;u.readyState=WebSocket.OPEN;u.reconnectAttempts=0;var i=o("open");i.isReconnect=t;t=!1;f.dispatchEvent(i)};e.onclose=function(i){var r,s;clearTimeout(s);e=null;l?(u.readyState=WebSocket.CLOSED,f.dispatchEvent(o("close"))):(u.readyState=WebSocket.CONNECTING,r=o("connecting"),r.code=i.code,r.reason=i.reason,r.wasClean=i.wasClean,f.dispatchEvent(r),t||h||((u.debug||n.debugAll)&&console.debug("ReconnectingWebSocket","onclose",u.url),f.dispatchEvent(o("close"))),s=u.reconnectInterval*Math.pow(u.reconnectDecay,u.reconnectAttempts),setTimeout(function(){u.reconnectAttempts++;u.open(!0)},s>u.maxReconnectInterval?u.maxReconnectInterval:s))};e.onmessage=function(t){(u.debug||n.debugAll)&&console.debug("ReconnectingWebSocket","onmessage",u.url,t.data);var i=o("message");i.data=t.data;f.dispatchEvent(i)};e.onerror=function(t){(u.debug||n.debugAll)&&console.debug("ReconnectingWebSocket","onerror",u.url,t);f.dispatchEvent(o("error"))}};this.automaticOpen==!0&&this.open(!1);this.send=function(t){if(e)return(u.debug||n.debugAll)&&console.debug("ReconnectingWebSocket","send",u.url,t),e.send(t);throw"INVALID_STATE_ERR : Pausing to reconnect websocket";};this.close=function(n,t){typeof n=="undefined"&&(n=1e3);l=!0;e&&e.close(n,t)};this.refresh=function(){e&&e.close()}}if(("WebSocket"in window))return n.prototype.onopen=function(){},n.prototype.onclose=function(){},n.prototype.onconnecting=function(){},n.prototype.onmessage=function(){},n.prototype.onerror=function(){},n.debugAll=!1,n.CONNECTING=WebSocket.CONNECTING,n.OPEN=WebSocket.OPEN,n.CLOSING=WebSocket.CLOSING,n.CLOSED=WebSocket.CLOSED,n});